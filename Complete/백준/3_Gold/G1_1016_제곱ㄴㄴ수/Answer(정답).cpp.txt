#include <bits/stdc++.h>
using namespace std;

typedef unsigned long long long_t;

// start : 시작 범위 (min)
// end : 끝 범위 (max)
int Check(long_t start, long_t end)
{
    // sieve = 체
    // sieve[idx] = true이면 (start + idx)는 제곱ㄴㄴ수
    // 처음에는 모든 수가 제곱ㄴㄴ수라고 가정
    vector<bool> sieve(end - start + 1, true);

    // base^2 형태의 제곱수들을 체크 (2^2, 3^2, 4^2, ...)
    // base^2이 end보다 크면 더 이상 체크할 필요 없음
    for (long_t base = 2; base * base <= end; base++)
    {
        long_t square = base * base;                         // 현재 제곱수 (4, 9, 16, 25, ...)
        long_t firstIdx = (square - (start % square)) % square;  // start ~ end 범위에서 square의 첫 배수 위치

        // square의 배수들을 모두 false로 마킹 (제곱수로 나누어떨어지므로 제곱ㄴㄴ수가 아님)
        for (long_t idx = firstIdx; idx < sieve.size(); idx += square)
            sieve[idx] = false;
    }

    // true로 남아있는 개수 세기 (제곱ㄴㄴ수의 개수)
    int count = 0;
    for (int idx = 0; idx < sieve.size(); idx++)
        if (sieve[idx]) count++;

    return count;
}

int main()
{
    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);

    long_t start, end;
    cin >> start >> end;

    cout << Check(start, end);

    return 0;
}
